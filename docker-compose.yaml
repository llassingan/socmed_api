services:
  mongodb:
    image: mongo:latest
    container_name: mongo_identity
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: socmeddb
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis_identity
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_msg
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postdb
    ports:
      - "5432:5432"
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d postdb"]
      interval: 10s
      timeout: 5s
      retries: 5

    volumes:
      - postgres_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./api-gateway/prometheus.yml:/etc/prometheus/prometheus.yml
    command: ["--config.file=/etc/prometheus/prometheus.yml"]


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      prometheus:
        condition: service_started

  api_gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api_gateway
    ports:
      - "3000:3000"
    env_file:
      - ./api-gateway/.env
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      postgres:
        condition: service_healthy
      prometheus:
        condition: service_started
      auth_service:
        condition: service_started
      post_service:
        condition: service_started
      media_service:
        condition: service_started
      search_service:
        condition: service_started
    environment:
      - REDIS=redis://redis:6379
    volumes:
      - ./logs/api_gateway:/app/logs
  
  auth_service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth_service
    env_file:
      - ./auth-service/.env
    depends_on:
      redis:
        condition: service_healthy
      prometheus:
        condition: service_started
      mongodb:
        condition: service_healthy
    environment:
      - REDIS=redis://redis:6379
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/socmeddb?authSource=admin
    volumes:
      - ./logs/auth_service:/app/logs

  post_service:
    build:
      context: ./post-service
      dockerfile: Dockerfile
    container_name: post_service
    env_file:
      - ./post-service/.env
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      prometheus:
        condition: service_started
    environment:
      - REDIS=redis://redis:6379
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - DATABASE_URL=postgresql://user:password@postgres:5432/postdb
    volumes:
      - ./logs/post_service:/app/logs
    command: ["sh", "-c", "npx prisma migrate dev && node src/server.js"]

  media_service:
    build:
      context: ./media-service
      dockerfile: Dockerfile
    container_name: media_service
    env_file:
      - ./media-service/.env
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      prometheus:
        condition: service_started
    environment:
      - REDIS=redis://redis:6379
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/socmeddb?authSource=admin
    volumes:
      - ./logs/media_service:/app/logs

  search_service:
    build:
      context: ./search-service
      dockerfile: Dockerfile
    container_name: search_service
    env_file:
      - ./search-service/.env
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      prometheus:
        condition: service_started
    environment:
      - REDIS=redis://redis:6379
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/socmeddb?authSource=admin
    volumes:
      - ./logs/search_service:/app/logs

volumes:
  redis_data:
  mongo_data:
  rabbitmq_data:
  grafana_data:
  postgres_data: